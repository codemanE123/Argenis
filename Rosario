#include <iostream>
#include <sqlite3.h> // SQLite C/C++ interface

// Callback function for executing SQL queries
static int callback(void *NotUsed, int argc, char **argv, char **azColName) {
    for (int i = 0; i < argc; i++) {
        std::cout << azColName[i] << " = " << (argv[i] ? argv[i] : "NULL") << std::endl;
    }
    std::cout << std::endl;
    return 0;
}

int main() {
    sqlite3 *db;
    char *zErrMsg = 0;
    int rc;

    // Open database connection
    rc = sqlite3_open("example.db", &db);
    if (rc) {
        std::cerr << "Can't open database: " << sqlite3_errmsg(db) << std::endl;
        return(1);
    } else {
        std::cout << "Opened database successfully" << std::endl;
    }

    // Create SQL statement
    const char *sql = "CREATE TABLE COMPANY("  \
                       "ID INT PRIMARY KEY     NOT NULL," \
                       "NAME           TEXT    NOT NULL," \
                       "AGE            INT     NOT NULL," \
                       "ADDRESS        CHAR(50)," \
                       "SALARY         REAL );";

    // Execute SQL statement
    rc = sqlite3_exec(db, sql, callback, 0, &zErrMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "SQL error: " << zErrMsg << std::endl;
        sqlite3_free(zErrMsg);
    } else {
        std::cout << "Table created successfully" << std::endl;
    }

    // Close database connection
    sqlite3_close(db);
    
    return 0;
}
